apiVersion: batch/v1
kind: Job
metadata:
  name: create-hostpath
spec:
  template:
    spec:
      containers:
      - name: create-hostpath
        image: busybox
        command: ['sh', '-c', 'mkdir -p /mnt/atlantis-data && chmod 777 /mnt/atlantis-data']
        volumeMounts:
        - name: hostpath-volume
          mountPath: /mnt/atlantis-data
      volumes:
      - name: hostpath-volume
        hostPath:
          path: /mnt/atlantis-data
          type: DirectoryOrCreate
      restartPolicy: Never
  backoffLimit: 1
---
apiVersion: v1
kind: Namespace
metadata:
  name: atlantis
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: atlantis-pv
spec:
  capacity:
    storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  hostPath:
    path: /mnt/atlantis-data # путь на хосте
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: atlantis
  namespace: atlantis
spec:
  serviceName: atlantis
  replicas: 1
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: atlantis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: atlantis
    spec:
      securityContext:
        fsGroup: 1000 # Atlantis group (1000) read/write access to volumes.
        fsGroupChangePolicy: "OnRootMismatch"
      containers:
      - name: atlantis
        image: ghcr.io/runatlantis/atlantis:v0.34.0
        securityContext:
          runAsUser: 0
        env:
        # - name: ATLANTIS_LOG_LEVEL
        #   value: "debug"
        - name: ATLANTIS_REPO_CONFIG
          value: /etc/atlantis/repo-config.yaml
        - name: ATLANTIS_REPO_ALLOWLIST
          value: "github.com/iveisberg/DevOps-Engineer-Diploma-Terraform"
        ### GitHub Config ###
        - name: ATLANTIS_GH_USER
          value: iveisberg
        - name: ATLANTIS_GH_TOKEN
          valueFrom:
            secretKeyRef:
              name: atlantis-vcs
              key: token
        - name: ATLANTIS_GH_WEBHOOK_SECRET
          valueFrom:
            secretKeyRef:
              name: atlantis-vcs
              key: webhook-secret
        ### End GitHub Config ###
        - name: YC_KMS_KEY_ID
          value: "abjrv7dc3qq27uijp8ob"
        # - name: YC_KEY_SECRET
        - name: ATLANTIS_DATA_DIR
          value: /atlantis-data
        - name: ATLANTIS_PORT
          value: "4141"
        volumeMounts:
        - name: repo-config
          mountPath: /etc/atlantis
          # readOnly: false
        - name: atlantis-data
          mountPath: /atlantis-data
          # readOnly: false
        - name: tf-volume
          mountPath: /home/atlantis/terraform_files
          # readOnly: false
        - name: tf-volume-id-rsa-pub
          mountPath: /root/.ssh
          # readOnly: false
        ports:
        - name: atlantis
          containerPort: 4141
        resources:
          requests:
            memory: 512Mi
            cpu: 200m
          limits:
            memory: 1Gi
            cpu: 500m
        livenessProbe:
          periodSeconds: 60
          httpGet:
            path: /healthz
            port: 4141
            scheme: HTTP
        readinessProbe:
          periodSeconds: 60
          httpGet:
            path: /healthz
            port: 4141
            scheme: HTTP
      volumes:
        - name: repo-config
          configMap:
            name: atlantis-repo-config
        - name: tf-volume-id-rsa-pub
          projected:
            sources:
              - configMap:
                  name: id-rsa.pub
                  items:
                    - key: id_ed25519.pub
                      path: id_ed25519.pub       
        - name: tf-volume
          projected:
            sources:
              - configMap:
                  name: terraformrc
                  items:
                    - key: .terraformrc
                      path: .terraformrc
              - secret:
                  name: secret.backend.tfvars
                  items:
                    - key: secret.backend.tfvars
                      path: secret.backend.tfvars
              - secret:
                  name: personal.auto.tfvars
                  items:
                    - key: personal.auto.tfvars
                      path: personal.auto.tfvars
              - secret:
                  name: yc-credentials
                  items:
                    - key: sa-key.json
                      path: sa-key.json
  volumeClaimTemplates:
  - metadata:
      name: atlantis-data
    spec:
      accessModes: ["ReadWriteOnce"] # Volume should not be shared by multiple nodes.
      resources:
        requests:
          storage: 5Gi
      storageClassName: local-storage # Указываем StorageClass
---
apiVersion: v1
kind: Service
metadata:
  name: atlantis
  namespace: atlantis
spec:
  selector:
    app.kubernetes.io/name: atlantis
  ports:
  - name: atlantis
    nodePort: 30414
    protocol: TCP
    port: 80
    targetPort: 4141 # Порт, на котором работает приложение в поде
  type: NodePort
